{"version":3,"file":"js/519.babylonBundle.js","mappings":"iSAAA,QAAe,IAA0B,uC,sBCmBlC,MAAMA,EAAb,cACY,KAAAC,OAA2B,KAC3B,KAAAC,OAAsC,KACtC,KAAAC,OAAyB,KACzB,KAAAC,OAAoC,KAM5C,KAAAC,YAAcC,MACVL,EACAC,KAEAK,KAAKN,OAASA,EACdM,KAAKL,OAASA,EAGd,MAAMM,EAAQ,IAAI,IAAMP,GAGxBM,KAAKH,OAAS,IAAI,IACd,kBACA,EACAK,KAAKC,GAAK,EACV,GACA,IAAI,IAAQ,EAAG,EAAG,GAClBF,GAIJD,KAAKH,OAAOO,UAAU,YAGtBJ,KAAKH,OAAOQ,cAAcV,GAAQ,GAGlCK,KAAKJ,QAAS,QACV,SACA,CAAEU,SAAU,EAAGC,SAAU,IACzBN,GAOJ,MAAMO,GAAS,QACX,SACA,CAAEC,MAAO,EAAGC,OAAQ,GACpBT,GAIEU,EAAiB,IAAI,IAAiB,kBAAmBV,GAC/DU,EAAeC,eAAiB,IAAI,IAAQC,EAAiBZ,GAE7DO,EAAOM,SAAWH,EAElB,MAAMI,EAAQ,IAAI,IACd,QACA,IAAI,IAAQ,GAAI,EAAG,GACnBd,GAOJ,OALAc,EAAMC,UAAY,GAClBD,EAAME,SAASC,EAAI,GAEnBlB,KAAKmB,MAAMC,MAAK,KAAOC,QAAQC,IAAI,WAAW,IAEvCrB,CAAK,CAEpB,CAjEIF,YACIsB,QAAQC,IAAI,sBAChB,EAiEJ,YAAmB7B,C","sources":["webpack://babylonjs-typescript-webpack-simple-scene/./assets/grass.jpg","webpack://babylonjs-typescript-webpack-simple-scene/./src/scenes/dev/voxelCavernMaze.ts"],"sourcesContent":["export default __webpack_public_path__ + \"9b31293ea96c8dfa518b45622da82a13.jpg\";","import {Engine} from \"@babylonjs/core/Engines/engine\";\nimport {Scene} from \"@babylonjs/core/scene\";\nimport {ArcRotateCamera} from \"@babylonjs/core/Cameras/arcRotateCamera\";\nimport {Vector3} from \"@babylonjs/core/Maths/math.vector\";\nimport {CreateSphere} from \"@babylonjs/core/Meshes/Builders/sphereBuilder\";\nimport {CreateGround} from \"@babylonjs/core/Meshes/Builders/groundBuilder\";\nimport {StandardMaterial} from \"@babylonjs/core/Materials/standardMaterial\";\nimport {CreateSceneClass} from \"../../createScene\";\n\n// If you don't need the standard material you will still need to import it since the scene requires it.\n// import \"@babylonjs/core/Materials/standardMaterial\";\nimport {Texture} from \"@babylonjs/core/Materials/Textures/texture\";\n\nimport grassTextureUrl from \"../../../assets/grass.jpg\";\nimport {DirectionalLight} from \"@babylonjs/core/Lights/directionalLight\";\n\nimport \"@babylonjs/core/Lights/Shadows/shadowGeneratorSceneComponent\";\nimport {Mesh, Nullable} from \"@babylonjs/core\";\n\nexport class VoxelCavernMaze implements CreateSceneClass {\n    private engine: Nullable<Engine> = null;\n    private canvas: Nullable<HTMLCanvasElement> = null;\n    private sphere: Nullable<Mesh> = null;\n    private camera: Nullable<ArcRotateCamera> = null;\n    \n    async run() {\n        console.log(`VoxelCavernMaze.run`);\n    }\n    \n    createScene = async (\n        engine: Engine,\n        canvas: HTMLCanvasElement\n    ): Promise<Scene> => {\n        this.engine = engine;\n        this.canvas = canvas;\n        \n        // This creates a basic Babylon Scene object (non-mesh)\n        const scene = new Scene(engine);\n\n        // This creates and positions a free camera (non-mesh)\n        this.camera = new ArcRotateCamera(\n            \"my first camera\",\n            0,\n            Math.PI / 3,\n            10,\n            new Vector3(0, 0, 0),\n            scene\n        );\n\n        // This targets the camera to scene origin\n        this.camera.setTarget(Vector3.Zero());\n\n        // This attaches the camera to the canvas\n        this.camera.attachControl(canvas, true);\n\n        // Our built-in 'sphere' shape.\n        this.sphere = CreateSphere(\n            \"sphere\",\n            { diameter: 2, segments: 32 },\n            scene\n        );\n\n        // Move the sphere upward 1/2 its height\n        //sphere.position.y = 1;\n\n        // Our built-in 'ground' shape.\n        const ground = CreateGround(\n            \"ground\",\n            { width: 6, height: 6 },\n            scene\n        );\n\n        // Load a texture to be used as the ground material\n        const groundMaterial = new StandardMaterial(\"ground material\", scene);\n        groundMaterial.diffuseTexture = new Texture(grassTextureUrl, scene);\n\n        ground.material = groundMaterial;\n\n        const light = new DirectionalLight(\n            \"light\",\n            new Vector3(0, -1, 1),\n            scene\n        );\n        light.intensity = 0.5;\n        light.position.y = 10;\n\n        this.run().then(() => {console.log(`run.exit`)});\n        \n        return scene;\n    };\n}\n\nexport default new VoxelCavernMaze();\n"],"names":["VoxelCavernMaze","engine","canvas","sphere","camera","createScene","async","this","scene","Math","PI","setTarget","attachControl","diameter","segments","ground","width","height","groundMaterial","diffuseTexture","grass","material","light","intensity","position","y","run","then","console","log"],"sourceRoot":""}